#!/usr/bin/perl -w
#
# (c) 2003-2007 Linbox, http://www.linbox.com/
# (c) 2008-2009 Nicolas Rueff / Mandriva, http://www.mandriva.com/
#
# $Id$
#
# This file is part of Pulse 2, http://pulse2.mandriva.org
#
# Pulse 2 is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# Pulse 2 is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Pulse 2; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
# MA 02110-1301, USA.

use File::Copy;

# Global consts
$BASEDIR = '/var/lib/pulse2/imaging';

use lib "/usr/share/pulse2/imaging/helpers";
require "lrs-legacy.pl";

my $eth;
my $log;

$ip = "";

########################################
#GET_INFO ( filename, separator, hash)
#--------
#fill hash with content of "filename"
#Skip comments "#",";" and Blank lines
########################################
sub get_info {
    my $file = shift;
    my $sep  = shift;
    my $hash = shift;

    # checks if file exists, attempt to create it if not, die if unsuccedeed
    stat $file or open FILE, '>>', $file and close FILE;

    open FILE, $file or die;
    while (<FILE>) {
        chomp;
        next if /^;/;
        next if /^#/;
        next if /^\s*$/;

        split ' ', $_, 2;

        my ( $key, $value ) = @_;
        $$hash{$key} = $value;
    }
    close(FILE);
}

sub parse_ether {
    %ether = ();
    get_info( $eth, " ", \%ether );
}


sub check_password {
    my $list = shift;
    my $key  = shift;
    my $pass = shift;

    # always return true
    return 0;
}

sub insert_ether {
    my $file    = shift;
    my $old     = shift;
    my $newline = shift;

    copy( $file, $file . ".old" ) or die("Cannot copy etc/ether. $!\n");
    open FILE, ">" . $file or die("Cannot write etc/ether. $!");
    print FILE "#Automatically generated, do not edit\n\n";
    foreach my $i ( keys %$old ) {
        print FILE "$i $$old{$i}\n";
    }
    print FILE "$newline\n";
    close(FILE);

    my ( $mac, $value ) = split ' ', $newline, 2;
    $$old{$mac} = $value;
}

# MAIN ////////////////////////////////////////////////////////////////////////

my $firstarg    = $ARGV[0];         # Sync option...
my $mac         = uc( $ARGV[0] );
my $hostname    = $ARGV[1];
my $password    = $ARGV[2];
my $proposed_ip = $ARGV[3];

if ( $ARGV[0] eq "" ) {
    print("Usage: check_add_host MAC HOSTNAME PASSWORD\n");
    exit;
}

$eth = $BASEDIR . "/etc/ether";
$log = $BASEDIR . "/log/addhost.log";

open CFG, "date|";
chomp( $date = <CFG> );
close(CFG);

open LOG, ">>" . $log;

parse_ether();

print LOG "$date : Trying to add $mac ($hostname), password ******** : ";

if ( $mac eq "?" ) {
    print LOG "MAC not retrieved in the process (ARP was flushed ?)\n";
    close(LOG);
    exit;
}

if ( exists $ether{$mac} ) { print LOG "MAC already used\n"; close(LOG); exit; }
if ( !defined $ENV{'__LRS_DO_NO_CHECK_PASS__'} ) {
    if ( !check_password( \%config, "passhost_$hostname", $password ) ) {
        if ( !check_password( \%config, "passmac_$mac", $password ) ) {
            if ( !check_password( \%config, "adminpass", $password ) ) {
                print LOG "PASSWORD check failed !\n";
                close(LOG);
                exit;
            }
        }
    }
}

if ( defined $ARGV[3] ) {
    $ip = $ARGV[3];
}

# update etc/ether
insert_ether( $eth, \%ether, $mac . " " . $ip . " " . $hostname );

my $found = 0;
if ( -f $cfg ) {
    open FILE, $cfg or die;
    while (<FILE>) {
        chomp;
        $_ = uc($_);

        # print;
        $found = 1 if /HARDWARE\sETHERNET\s$mac/;
        $found = 2 if /FIXED-ADDRESS\s$ip/;
    }
    close(FILE);
}

$_ = $mac;
s/\://g;
my $smac = $_;

if ( iniGetVal( \%config, "-", "addscript" ) ne "" ) {
    system( iniGetVal( \%config, "-", "addscript" ) . " "
          . $smac . " "
          . $ip . " "
          . $hostname );

    # update the hostname file
    open( HOST, ">$BASEDIR/images/" . $smac . "/hostname" );
    print HOST $hostname;
    close(HOST);
}

print LOG "IP $ip added successfully to 'ether' file\n";
close(LOG);
exit(0);
