#!/bin/sh
#
# Copyright (C) 2006, Adam Cecile for Linbox FAS
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA



# Redhat based distributions specific
# chkconfig: 345 99 60
# description: MMC agent

# Variables
DESC="Pulse2 Package Server : pulse2-package-server"
DAEMON="##SBINDIR##/pulse2-package-server"
PIDFILE="/var/run/pulse2-package-server.pid"

# Function to start daemon
start () {
    echo -n "Starting ${DESC} : "
    # Start daemon (no need to demonize it)
    # Do not start it if a pidfile already exist
    if [ ! -e ${PIDFILE} ]
    then
        ${DAEMON} >/dev/null 2>&1
        # Get return code
        RETVAL=$?
    else
        RETVAL=1
    fi
    # If return code is 0, everything went fine
    if [ ${RETVAL} -eq 0 ]
    then
        echo "done."
    else
        echo "failed."
    fi
    return ${RETVAL}
}

# Function to stop daemon
stop () {
    echo -n $"Stopping ${DESC} : "
    # Check if the pidfile exists
    if [ -e ${PIDFILE} ]
    then
        # If there's one, get the pid and send SIG 15
        kill -15 `cat ${PIDFILE}`
        # Get return code
        RETVAL=$?
        rm -f $PIDFILE
        # If there's not pidfile, skipp kill and define RETVAL as 1
    else
        RETVAL=1
    fi
    if [ ${RETVAL} -eq 0 ]
    then
        echo "done."
    else
        echo "failed."
    fi
    return ${RETVAL}
}

# Function to restart (run stop, then start)
restart() {
    stop
    sleep 2
    start
}

case $1 in
    start)
        start
    ;;
    stop)
        stop
    ;;
    restart | force-reload)
        restart
    ;;
    *)

    echo "Usage: ${0} {start|stop|restart|force-reload}"
    exit 1
esac

exit ${RETVAL}
